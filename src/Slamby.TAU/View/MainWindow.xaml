<Window x:Class="Slamby.TAU.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:Slamby.TAU.Model"
        xmlns:viewModels="clr-namespace:Slamby.TAU.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:view="clr-namespace:Slamby.TAU.View"
        xmlns:converter="clr-namespace:Slamby.TAU.Converter"
        xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
        xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
        xmlns:helper="clr-namespace:Slamby.TAU.Helper"
        xmlns:sdk="clr-namespace:Slamby.SDK.Net.Models;assembly=Slamby.SDK.Net"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        mc:Ignorable="d"
        Title="Slamby TAU" Height="800" Width="1200"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        IsEnabled="{Binding IsEnable}"
        WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged" >
            <i:InvokeCommandAction Command="{Binding SizeChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding RefreshCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converter:StringListToStringConverter x:Key="StringListToStringConverter"/>
            <converter:StringToCellTemplateConverter x:Key="StringToCellTemplateConverter"/>
            <converter:ProcessStatusToBoolConverter x:Key="ProcessStatusToBoolConverter"/>
            <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:ErrorCountToBackgrounColorConverter x:Key="ErrorCountToBackgrounColorConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <materialDesign:DialogHost x:Name="ProgressDialog" Identifier="ProgressDialog">
            <materialDesign:DialogHost x:Name="RootDialog" Identifier="RootDialog">
                <Grid>
                    <DockPanel>
                        <Grid DockPanel.Dock="Top">
                            <materialDesign:ColorZone Padding="5" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryDark">
                                <DockPanel LastChildFill="False">
                                    <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges">
                                        <StackPanel>
                                            <Button Command="{Binding ChangeSettingsModeCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Wrench" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Settings" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding RefreshCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Refresh" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Refresh" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding HelpCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Question" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Help" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding AboutCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Info" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="About" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>
                                </DockPanel>
                            </materialDesign:ColorZone>
                        </Grid>
                        <StackPanel  Orientation="Vertical" Width="70" DockPanel.Dock="Left" Background="{DynamicResource PrimaryHueDarkBrush}">
                            <ListBox x:Name="IconMenuItemsListBox" SelectedItem="{Binding SelectedMenuItem}" Background="{DynamicResource PrimaryHueLightBrush}" ItemsSource="{Binding MenuItems}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding DoubleClickCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="models:MenuItem">
                                        <Grid Margin="5 0" ToolTip="{Binding Name}">
                                            <Image Margin="2" Source="{Binding Icon}" Height="28" Width="28" HorizontalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>

                        <dockablz:Layout>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1">
                                    <dockablz:Layout Partition="Partition" Name="LayoutRoot"  ClosingFloatingItemCallback="{Binding ClosingFloatingItemHandler}">
                                        <dockablz:Layout.Resources>
                                            <DataTemplate DataType="{x:Type dragablz:HeaderedItemViewModel}">
                                                <ContentControl Content="{Binding Content}"/>
                                            </DataTemplate>
                                        </dockablz:Layout.Resources>
                                        <dragablz:TabablzControl ConsolidateOrphanedItems="True" ClosingItemCallback="{Binding ClosingTabItemHandler}" ItemsSource="{Binding Tabs}" SelectedItem="{Binding SelectedTab}" HeaderMemberPath="Header" ShowDefaultCloseButton="True" x:Name="InitialTabablzControl" >
                                            <dragablz:TabablzControl.InterTabController>
                                                <dragablz:InterTabController InterTabClient="{Binding InterTabClient}" Partition="Partition" />
                                            </dragablz:TabablzControl.InterTabController>
                                        </dragablz:TabablzControl>
                                    </dockablz:Layout>
                                </Grid>
                                <Grid Background="{DynamicResource PrimaryHueLightBrush}" VerticalAlignment="Top" Grid.RowSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Expander FlowDirection="RightToLeft" HorizontalAlignment="Stretch">
                                        <Expander.Header>
                                            <DockPanel FlowDirection="LeftToRight">
                                                <Label Content="Runnning processes"/>
                                                <fa:ImageAwesome Icon="Spinner" Height="15" Width="15" Margin="10,0"/>
                                            </DockPanel>
                                        </Expander.Header>
                                        <Grid FlowDirection="LeftToRight">
                                            <DataGrid FlowDirection="LeftToRight" ItemsSource="{Binding ActiveProcessesList}" AutoGenerateColumns="False" IsReadOnly="True">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Id" Binding="{Binding Id}" IsReadOnly="True"/>
                                                    <DataGridTemplateColumn Header="Percent">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <StackPanel>
                                                                    <TextBlock FlowDirection="LeftToRight" HorizontalAlignment="Center" Text="{Binding Percent, StringFormat={}{0} %}"/>
                                                                    <ProgressBar Value="{Binding Path=Percent}" HorizontalAlignment="Center" Width="120"/>
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTextColumn Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" IsReadOnly="True"/>
                                                    <DataGridTextColumn Header="ErrorMessages" Binding="{Binding ErrorMessages, Converter={StaticResource StringListToStringConverter}}" IsReadOnly="True"/>
                                                    <DataGridTemplateColumn Header="ResultMessage" IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <ContentControl FlowDirection="LeftToRight">
                                                                    <Binding Path="ResultMessage" Converter="{StaticResource StringToCellTemplateConverter}"/>
                                                                </ContentControl>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTemplateColumn>
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Button VerticalAlignment="Center" Command="{Binding Main.RefreshProcessCommand, Source={StaticResource Locator}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=SelectedItem.Id}" ToolTip="Refresh">
                                                                    <fa:ImageAwesome Icon="Refresh" Margin="5"/>
                                                                </Button>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTemplateColumn>
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Button VerticalAlignment="Center" Command="{Binding Main.CancelProcessCommand, Source={StaticResource Locator}}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=SelectedItem}" Content="Cancel" IsEnabled="{Binding Path=Status, Converter={StaticResource ProcessStatusToBoolConverter}}"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Grid>
                                    </Expander>
                                    <Separator Grid.Row="1"/>
                                </Grid>
                            </Grid>
                        </dockablz:Layout>

                    </DockPanel>

                    <DockPanel x:Name="SettingsPanel" Visibility="{Binding ElementName=SettingsBackToggleButton, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid DockPanel.Dock="Top">
                            <materialDesign:ColorZone materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          Mode="PrimaryDark">
                                <DockPanel>
                                    <ToggleButton HorizontalAlignment="Right"  Style="{StaticResource MaterialDesignHamburgerToggleButton}" x:Name="SettingsBackToggleButton"
                                  Margin="16,0" IsChecked="{Binding IsInSettingsMode}"/>
                                    <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges">
                                        <StackPanel>
                                            <Button Command="{Binding ChangeSettingsModeCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Share" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="TAU" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding RefreshCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Refresh" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Refresh" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding HelpCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Question" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Help" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding AboutCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Info" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="About" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>

                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22" Margin="30,0,0,0">Settings</TextBlock>

                                </DockPanel>
                            </materialDesign:ColorZone>
                        </Grid>
                        <StackPanel Orientation="Vertical" DockPanel.Dock="Left" Background="{DynamicResource PrimaryHueDarkBrush}">
                            <ListBox x:Name="SettingsMenuItemsListBox" Background="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Center" SelectedIndex="0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="models:MenuItem">
                                        <Grid Margin="3 0">
                                            <TextBlock Text="{Binding Name}" Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <models:MenuItem Name="Endpoint">
                                    <models:MenuItem.Content>
                                        <view:Connect HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                    </models:MenuItem.Content>
                                </models:MenuItem>
                                <models:MenuItem Name="Version">
                                    <models:MenuItem.Content>
                                        <view:VersionSettings>
                                            <view:VersionSettings.DataContext>
                                                <viewModels:VersionSettingsViewModel/>
                                            </view:VersionSettings.DataContext>
                                        </view:VersionSettings>
                                    </models:MenuItem.Content>
                                </models:MenuItem>
                                <models:MenuItem Name="Theme">
                                    <models:MenuItem.Content>
                                        <Grid Background="White"/>
                                    </models:MenuItem.Content>
                                </models:MenuItem>
                            </ListBox>
                        </StackPanel>

                        <ContentControl Content="{Binding ElementName=SettingsMenuItemsListBox, Path=SelectedItem.Content}" />
                    </DockPanel>
                </Grid>
            </materialDesign:DialogHost>
        </materialDesign:DialogHost>


        <Grid Grid.Row="1" Height="30" Background="{DynamicResource SecondaryAccentBrush}">
            <DockPanel Height="30" Background="{Binding Path=ResourcesMonitor.ErrorCount, Source={StaticResource Locator}, Converter={StaticResource ErrorCountToBackgrounColorConverter}}">
                <StackPanel DataContext="{Binding Path=ResourcesMonitor, Source={StaticResource Locator}}" Orientation="Horizontal" DockPanel.Dock="Left" Height="20" Margin="10,0" VerticalAlignment="Center" HorizontalAlignment="Left">

                    <ContentPresenter Content="{Binding Path=EndPointStatus}" >
                        <ContentPresenter.Resources>
                            <DataTemplate DataType="{x:Type models:EndPointStatus}">
                                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                    <TextBlock Text="{Binding Status.CpuUsage, StringFormat=CPU: {0}}" VerticalAlignment="Center"/>
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Status.FreeMemory, StringFormat=Memory: {0}/}" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding Status.TotalMemory, StringFormat={}{0} Mb}" VerticalAlignment="Center"/>
                                    <TextBlock Margin="10,0,0,0" Text="{Binding Status.AvailableFreeSpace, StringFormat=Free space on disk: {0} Mb}" VerticalAlignment="Center"/>
                                    <Button Margin="10,0" Command="{Binding ExpandStatusCommand}" Height="10" Width="10" DataContext="{Binding Path=Main, Source={StaticResource Locator}}" VerticalAlignment="Center">
                                        <Button.Template>
                                            <ControlTemplate>
                                                <fa:ImageAwesome Icon="Expand" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <fa:ImageAwesome Icon="ExclamationTriangle" Height="18" Width="18" Margin="10,0" ToolTip="Communication error!" Visibility="{Binding Path=IsAlive, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                    <ToggleButton x:Name="ErrorsToggleButton" VerticalAlignment="Center" Margin="0,1,10,0" Tag="Errors">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked" >
                                <i:InvokeCommandAction Command="{Binding ErrorCountResetCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unchecked" >
                                <i:InvokeCommandAction Command="{Binding ErrorCountResetCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ToggleButton.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border BorderBrush="Red" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="3" CornerRadius="2" Padding="2"/>
                                    <Label Content="{Binding ErrorCount}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Margin="-2"/>
                                </Grid>
                            </ControlTemplate>
                        </ToggleButton.Template>
                    </ToggleButton>

                    <Popup IsOpen="{Binding ElementName=ErrorsToggleButton, Path=IsChecked}">
                        <Border BorderThickness="3" BorderBrush="{DynamicResource SecondaryAccentBrush}">
                            <ScrollViewer Height="300" Width="300" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Background="White">
                                <ListBox ItemsSource="{Binding Errors, Mode=OneWay}" Background="White">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick" >
                                            <i:InvokeCommandAction Command="{Binding ShowErrorDetailsCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, Path=SelectedItem}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <!--<Expander Header="{Binding Header}" Expanded="Expander_OnExpanded">
                                                <Expander.Style>
                                                    <Style TargetType="{x:Type Expander}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Details}" Value="">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate>
                                                                            <Expander Header="{Binding Header}">
                                                                                <TextBlock Text="{Binding Message}" TextWrapping="Wrap"/>
                                                                            </Expander>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Expander.Style>
                                                <Expander Header="{Binding Message}" Expanded="Expander_OnExpanded">
                                                    <TextBlock Text="{Binding Details}" TextWrapping="Wrap"/>
                                                </Expander>
                                            </Expander>-->
                                            <TextBlock Text="{Binding Header}" TextWrapping="Wrap" ToolTip="{Binding Message}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </StackPanel>

                <ToggleButton DockPanel.Dock="Right" x:Name="LogToggleButton" HorizontalAlignment="Right" VerticalAlignment="Center" IsChecked="{Binding LogWindowIsOpen}" Margin="0,1,10,0"/>
                <Popup IsOpen="{Binding ElementName=LogToggleButton, Path=IsChecked}">
                    <Border BorderThickness="3" BorderBrush="{DynamicResource SecondaryAccentBrush}">
                        <StackPanel Background="White">
                            <ScrollViewer Width="300"  Height="300">
                                <TextBox  Text="{Binding Messages}" TextWrapping="Wrap" IsHitTestVisible="True">
                                    <TextBox.DataContext>
                                        <models:MessageReciever/>
                                    </TextBox.DataContext>
                                </TextBox>
                            </ScrollViewer>
                        </StackPanel>
                    </Border>
                </Popup>
            </DockPanel>
        </Grid>
    </Grid>
</Window>

