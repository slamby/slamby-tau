<Window x:Class="Slamby.TAU.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Slamby.TAU"
        xmlns:models="clr-namespace:Slamby.TAU.Model"
        xmlns:viewModels="clr-namespace:Slamby.TAU.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:view="clr-namespace:Slamby.TAU.View"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        mc:Ignorable="d"
        Title="Slamby TAU" Height="800" Width="1200"
        WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged" >
            <i:InvokeCommandAction Command="{Binding SizeChangedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreviewKeyDown" >
            <command:EventToCommand Command="{Binding PreviewKeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <materialDesign:DialogHost x:Name="ErrorDialog" Identifier="ErrorDialog">
            <materialDesign:DialogHost x:Name="RootDialog" Identifier="RootDialog">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:InvokeCommandAction Command="{Binding LoadCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid>
                    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                        <materialDesign:DrawerHost.LeftDrawerContent>
                            <StackPanel  Orientation="Vertical" Background="{DynamicResource PrimaryHueDarkBrush}">
                                <ToggleButton HorizontalAlignment="Right"  Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                  Margin="16" IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />

                                <ListBox x:Name="MenuItemsListBox" SelectedItem="{Binding SelectedMenuItem}" Background="{DynamicResource PrimaryHueLightBrush}" ItemsSource="{Binding MenuItems}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                                            <i:InvokeCommandAction Command="{Binding CloseMenuCommand}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="SelectionChanged" >
                                            <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="models:MenuItem">
                                            <StackPanel Orientation="Horizontal" Margin="32 0 32 0" ToolTip="{Binding Name}">
                                                <Image Margin="2" Source="{Binding Icon}" Height="28" Width="28"/>
                                                <TextBlock Text="{Binding Name}" Margin="3" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </materialDesign:DrawerHost.LeftDrawerContent>

                        <DockPanel>
                            <Grid DockPanel.Dock="Top">
                                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          Mode="PrimaryDark">
                                    <DockPanel>
                                        <ToggleButton IsChecked="{Binding MenuIsOpen}"  Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                      x:Name="MenuToggleButton"/>
                                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges">
                                            <StackPanel>
                                                <Button Command="{Binding ChangeSettingsModeCommand}">
                                                    <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                        <fa:ImageAwesome Icon="Wrench" Height="15" Width="15" Margin="10,0"/>
                                                        <TextBlock Text="Settings" Margin="3" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Button>
                                                <Button Command="{Binding RefreshCommand}">
                                                    <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                        <fa:ImageAwesome Icon="Refresh" Height="15" Width="15" Margin="10,0"/>
                                                        <TextBlock Text="Refresh" Margin="3" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Button>
                                                <Button Command="{Binding HelpCommand}">
                                                    <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                        <fa:ImageAwesome Icon="Question" Height="15" Width="15" Margin="10,0"/>
                                                        <TextBlock Text="Help" Margin="3" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Button>
                                                <Button Command="{Binding AboutCommand}">
                                                    <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                        <fa:ImageAwesome Icon="Info" Height="15" Width="15" Margin="10,0"/>
                                                        <TextBlock Text="About" Margin="3" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Button>
                                            </StackPanel>
                                        </materialDesign:PopupBox>

                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="22" Margin="30,0,0,0" Text="{Binding SelectedMenuItem.Name}"/>

                                    </DockPanel>
                                </materialDesign:ColorZone>
                                <StackPanel HorizontalAlignment="Right" Margin="0,25,60,0" Background="{DynamicResource PrimaryHueLightBrush}" VerticalAlignment="Top">
                                    <ComboBox DisplayMemberPath="Name" SelectedItem="{Binding SelectedDataSet}" Background="{DynamicResource PrimaryHueLightBrush}" ItemsSource="{Binding DataSets}" />
                                </StackPanel>
                            </Grid>
                            <StackPanel  Orientation="Vertical" Width="70" DockPanel.Dock="Left" Background="{DynamicResource PrimaryHueDarkBrush}">
                                <ListBox x:Name="IconMenuItemsListBox" SelectedItem="{Binding ElementName=MenuItemsListBox, Path=SelectedItem, Mode=TwoWay}" Background="{DynamicResource PrimaryHueLightBrush}" ItemsSource="{Binding ElementName=MenuItemsListBox, Path=Items}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate DataType="models:MenuItem">
                                            <Grid Margin="5 0" ToolTip="{Binding Name}">
                                                <Image Margin="2" Source="{Binding Icon}" Height="28" Width="28" HorizontalAlignment="Center"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>

                            <ContentControl Content="{Binding ElementName=MenuItemsListBox, Path=SelectedItem.Content}" />
                        </DockPanel>

                    </materialDesign:DrawerHost>

                    <DockPanel x:Name="SettingsPanel" Visibility="{Binding ElementName=SettingsBackToggleButton, Path=IsChecked, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid DockPanel.Dock="Top">
                            <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                          Mode="PrimaryDark">
                                <DockPanel>
                                    <ToggleButton HorizontalAlignment="Right"  Style="{StaticResource MaterialDesignHamburgerToggleButton}" x:Name="SettingsBackToggleButton"
                                  Margin="16,0" IsChecked="{Binding IsInSettingsMode}"/>
                                    <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges">
                                        <StackPanel>
                                            <Button Command="{Binding ChangeSettingsModeCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Share" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="TAU" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding RefreshCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Refresh" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Refresh" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding HelpCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Question" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="Help" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Command="{Binding AboutCommand}">
                                                <StackPanel Orientation="Horizontal" Margin="32 0 32 0">
                                                    <fa:ImageAwesome Icon="Info" Height="15" Width="15" Margin="10,0"/>
                                                    <TextBlock Text="About" Margin="3" VerticalAlignment="Center"/>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </materialDesign:PopupBox>

                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22" Margin="30,0,0,0">Settings</TextBlock>

                                </DockPanel>
                            </materialDesign:ColorZone>
                        </Grid>
                        <StackPanel Orientation="Vertical" DockPanel.Dock="Left" Background="{DynamicResource PrimaryHueDarkBrush}">
                            <ListBox x:Name="SettingsMenuItemsListBox" Background="{DynamicResource PrimaryHueLightBrush}" HorizontalAlignment="Center" SelectedIndex="0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="models:MenuItem">
                                        <Grid Margin="3 0">
                                            <TextBlock Text="{Binding Name}" Margin="3" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <models:MenuItem Name="Endpoint">
                                    <models:MenuItem.Content>
                                        <view:EndPointSettings/>
                                    </models:MenuItem.Content>
                                </models:MenuItem>
                                <models:MenuItem Name="Theme">
                                    <models:MenuItem.Content>
                                        <Grid Background="White"/>
                                    </models:MenuItem.Content>
                                </models:MenuItem>
                            </ListBox>
                        </StackPanel>

                        <ContentControl Content="{Binding ElementName=SettingsMenuItemsListBox, Path=SelectedItem.Content}" >
                            <ContentControl.DataContext>
                                <viewModels:SettingsViewModel/>
                            </ContentControl.DataContext>
                        </ContentControl>
                    </DockPanel>
                </Grid>
            </materialDesign:DialogHost>
        </materialDesign:DialogHost>


        <StackPanel Grid.Row="1" Height="20" Background="{DynamicResource SecondaryAccentBrush}">
            <ToggleButton x:Name="LogToggleButton" HorizontalAlignment="Right" VerticalAlignment="Center" IsChecked="{Binding LogWindowIsOpen}" Margin="0,1,10,0"/>
            <Popup IsOpen="{Binding ElementName=LogToggleButton, Path=IsChecked}">
                <Border BorderThickness="3" BorderBrush="{DynamicResource SecondaryAccentBrush}">
                    <StackPanel Background="White">
                        <ScrollViewer Width="300"  Height="300">
                            <TextBox  Text="{Binding Messages}" TextWrapping="Wrap" IsHitTestVisible="True">
                                <TextBox.DataContext>
                                    <models:MessageReciever/>
                                </TextBox.DataContext>
                            </TextBox>
                        </ScrollViewer>
                    </StackPanel>
                </Border>
            </Popup>
        </StackPanel>
    </Grid>
</Window>

