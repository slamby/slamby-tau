<UserControl x:Class="Slamby.TAU.View.CommonDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:enum="clr-namespace:Slamby.TAU.Enum"
             xmlns:helper="clr-namespace:Slamby.TAU.Helper"
             xmlns:models="clr-namespace:Slamby.TAU.Model"
             xmlns:services="clr-namespace:Slamby.SDK.Net.Models.Services;assembly=Slamby.SDK.Net"
             xmlns:sdk="clr-namespace:Slamby.SDK.Net.Models;assembly=Slamby.SDK.Net"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:converter="clr-namespace:Slamby.TAU.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converter:StringListToStringConverter x:Key="StringListToStringConverter"/>
    </UserControl.Resources>
    <DockPanel LastChildFill="True">

        <StackPanel Orientation="Horizontal" Margin="20" DockPanel.Dock="Bottom"
                    HorizontalAlignment="Center">
            <Button IsDefault="True" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}" Visibility="{Binding YesButtonIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.CommandParameter>
                    <enum:CommonDialogResult>Yes</enum:CommonDialogResult>
                </Button.CommandParameter>
                YES
            </Button>
            <Button IsCancel="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}" Visibility="{Binding NoButtonIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.CommandParameter>
                    <enum:CommonDialogResult>No</enum:CommonDialogResult>
                </Button.CommandParameter>
                NO
            </Button>
            <Button IsDefault="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}" Visibility="{Binding OkButtonIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.CommandParameter>
                    <enum:CommonDialogResult>Ok</enum:CommonDialogResult>
                </Button.CommandParameter>
                OK
            </Button>
            <Button IsCancel="True" Margin="8 0 0 0" Style="{DynamicResource MaterialDesignFlatButton}"
                    Command="{x:Static wpf:DialogHost.CloseDialogCommand}" Visibility="{Binding CancelButtonIsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button.CommandParameter>
                    <enum:CommonDialogResult>Cancel</enum:CommonDialogResult>
                </Button.CommandParameter>
                CANCEL
            </Button>
        </StackPanel>
        <ScrollViewer DockPanel.Dock="Top" MaxHeight="250" MaxWidth="750" VerticalScrollBarVisibility="Auto">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding ErrorMessage}" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Left" Margin="20" Visibility="{Binding ShowError, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <TextBlock Grid.Row="1" Text="{Binding Header}" TextWrapping="Wrap" HorizontalAlignment="Left" Margin="20"/>
                <Separator Grid.Row="2" Background="{DynamicResource PrimaryHueLightBrush}"/>
            </Grid>
        </ScrollViewer>
        <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ContentControl Content="{Binding Content, Mode=TwoWay}" Margin="20,10" TabIndex="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentControl.Resources>
                    <ResourceDictionary>
                        <DataTemplate DataType="{x:Type models:NewDataSetWrapper}">
                            <ScrollViewer MaxHeight="800" MaxWidth="1200" VerticalScrollBarVisibility="Auto">
                                <Grid Margin="16" MinWidth="400">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="60" />
                                    </Grid.RowDefinitions>
                                    <TextBlock>New data set:</TextBlock>
                                    <TextBox wpf:TextFieldAssist.Hint="Name" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                                             Text="{Binding DataSet.Name, UpdateSourceTrigger=PropertyChanged}" Margin="0 6 0 0" FontSize="18" Grid.Row="1"/>
                                    <TextBox wpf:TextFieldAssist.Hint="NgramCount" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Text="{Binding DataSet.NGramCount, UpdateSourceTrigger=PropertyChanged}" Margin="0 8 0 0" FontSize="16" Grid.Row="2"/>
                                    <TextBox Grid.Row="3" wpf:TextFieldAssist.Hint="IdField" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="0 8 0 0" Text="{Binding Path=DataSet.IdField, UpdateSourceTrigger=PropertyChanged}"
                 FontSize="16" />
                                    <TextBox Grid.Row="4" wpf:TextFieldAssist.Hint="TagField" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="0 8 0 0" Text="{Binding Path=DataSet.TagField, UpdateSourceTrigger=PropertyChanged}"
                 FontSize="16" />
                                    <TextBox wpf:TextFieldAssist.Hint="InterpretedFields" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"
                 Margin="0 8 0 0" Text="{Binding Path=DataSet.InterpretedFields, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringListToStringConverter}}"
                 FontSize="16" Grid.Row="5"/>
                                    <StackPanel Grid.Row="6" Orientation="Horizontal" Margin="0 8 0 0">
                                        <RadioButton IsChecked="{Binding SampleDocumentChecked, UpdateSourceTrigger=PropertyChanged}" Content="SampleDocument" GroupName="SampleOrSchema" x:Name="SampleRadioButton"/>
                                        <RadioButton Content="DocumentSchema" GroupName="SampleOrSchema" x:Name="SchemaRadioButton"/>
                                    </StackPanel>
                                    <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=DataContext.HelpCommand}" Grid.Row="7" HorizontalAlignment="Left"  ToolTip="How can I create my own schema?" Visibility="{Binding ElementName=SchemaRadioButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <fa:ImageAwesome Icon="Question" Height="15" Width="15" Margin="10,0"/>
                                    </Button>
                                    <TextBox Margin="0 8 0 0" TextWrapping="Wrap" AcceptsReturn="True" Visibility="{Binding ElementName=SampleRadioButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                 FontSize="12" Grid.Row="8">
                                        <TextBox.Text>
                                            <Binding Path="DataSet.SampleDocument" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <helper:JsonValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Margin="0 8 0 0" TextWrapping="Wrap" AcceptsReturn="True" Visibility="{Binding ElementName=SchemaRadioButton, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                 FontSize="12" Grid.Row="8">
                                        <TextBox.Text>
                                            <Binding Path="DataSet.Schema" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <helper:JsonValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue"/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                            </ScrollViewer>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type models:JContent}">
                            <TextBox TextWrapping="Wrap" AcceptsReturn="True" FontSize="12" VerticalScrollBarVisibility="Auto"  MaxHeight="350" MaxWidth="700">
                                <TextBox.Text>
                                    <Binding Path="JString" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <helper:JsonValidationRule ValidatesOnTargetUpdated="True" ValidationStep="UpdatedValue"/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type models:CsvImportSettings}">
                            <Grid MinWidth="100">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Delimiter: " VerticalAlignment="Center"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Delimiter, UpdateSourceTrigger=PropertyChanged}" MinWidth="20" MaxWidth="50" VerticalAlignment="Center"/>
                                <CheckBox Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="Force" IsChecked="{Binding Force}" Style="{StaticResource MaterialDesignCheckBox}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type models:Message}">
                            <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" HorizontalAlignment="Center" Margin="20" MaxWidth="400" MaxHeight="500"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type services:Service}">
                            <StackPanel>
                                <TextBox wpf:TextFieldAssist.Hint="Name" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"                 
                                        Margin="0,6,0,0" FontSize="14" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBox wpf:TextFieldAssist.Hint="Alias" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"                 
                                        Margin="0,6,0,0" FontSize="14" Text="{Binding Alias, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBox wpf:TextFieldAssist.Hint="Description" Style="{DynamicResource MaterialDesignFloatingHintTextBox}"                 
                                        Margin="0,10,0,0" FontSize="14" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" MaxHeight="100" TextWrapping="Wrap" AcceptsReturn="True"/>
                                <ComboBox Margin="0,10,0,0" ItemsSource="{Binding Source={StaticResource ServiceTypes}}" SelectedItem="{Binding Type, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ResourceDictionary>
                </ContentControl.Resources>
            </ContentControl>
        </StackPanel>
        <!--<GridSplitter Grid.Row="3" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" Background="Black" ResizeDirection="Rows" ResizeBehavior="PreviousAndCurrent"/>
        <GridSplitter Grid.Column="2" Grid.RowSpan="4" Width="2" VerticalAlignment="Stretch" Background="Black" ResizeDirection="Columns" ResizeBehavior="PreviousAndCurrent"/>-->
    </DockPanel>
</UserControl>
